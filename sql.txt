CREATE TABLE user(
   id INT AUTO_INCREMENT,
   nom VARCHAR(255) NOT NULL,
   prenom VARCHAR(255) NOT NULL,
   mail VARCHAR(255) NOT NULL,
   statut VARCHAR(50),
   mdp VARCHAR(255) NOT NULL,
   PRIMARY KEY(id),
   UNIQUE(mail)
);

CREATE TABLE classe(
   id INT AUTO_INCREMENT,
   label VARCHAR(50) NOT NULL,
   PRIMARY KEY(id)
);

CREATE TABLE salle(
   id INT AUTO_INCREMENT,
   label VARCHAR(100) NOT NULL,
   PRIMARY KEY(id)
);

CREATE TABLE document(
   id INT AUTO_INCREMENT,
   label VARCHAR(255) NOT NULL,
   id_1 INT NOT NULL,
   PRIMARY KEY(id),
   FOREIGN KEY(id_1) REFERENCES user_(id)
);
# justification
# id absence unique (attribut)

CREATE TABLE module(
   id INT AUTO_INCREMENT,
   label VARCHAR(50) NOT NULL,
   date_debut DATETIME NOT NULL,
   date_fin DATETIME NOT NULL,
   description TEXT,
   id_salle INT NOT NULL,
   id_user INT NOT NULL,
   id_classe INT NOT NULL,
   PRIMARY KEY(id),
   FOREIGN KEY(id_salle) REFERENCES salle(id),
   FOREIGN KEY(id_user) REFERENCES user(id),
   FOREIGN KEY(id_classe) REFERENCES classe(id)
);

CREATE TABLE absence(
   id INT,
   id_document INT NOT NULL,
   id_module INT NOT NULL,
   id_user INT NOT NULL,
   PRIMARY KEY(id),
   UNIQUE(id_document),
   FOREIGN KEY(id_module) REFERENCES module(id),
   FOREIGN KEY(id_user) REFERENCES user(id)
);

CREATE TABLE classe_user(
   id_user INT,
   id_classe INT,
   PRIMARY KEY(id_user, id_classe),
   FOREIGN KEY(id_user) REFERENCES user(id),
   FOREIGN KEY(id_classe) REFERENCES classe(id)
);

____________________________________________________________________________________________________________________________________

=> cours GET => module => json[]

login => 
refresh token => 
register => done
changement mot de passe => pour all

a ajouter :

logout 

user => /authenticated/
get

module => par date / /authenticated/ / => les siens (si add user its intervenant statut)
get
create

classe => create
salle => create


=> documents //
get
create (post) => attribut (absence unique)
delete
update

=> absence relatif Ã  utilisateurs et si documents // si bip destruction absence
get
create
destroy (if signed)


